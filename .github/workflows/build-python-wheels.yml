name: build-python-wheels
on: [push]
defaults:
  run:
    shell: bash
jobs:
  build-tensorflow:
    runs-on: ubuntu-18.04
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - run: >
          docker build . --build-arg BUILDKIT_INLINE_CACHE=1 --target tflite-lib-build -f ci_scripts/linux-python-wheels.dockerfile
          -t ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-lib-build
          --cache-from=ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-lib-build,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-base-build
      - run: docker tag $(docker images --filter "label=tflite-base-build" --format '{{.ID}}') ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-base-build
      - run: docker push ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-base-build
      - run: docker push ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-lib-build
  build-pybase:
    runs-on: ubuntu-18.04
    env:
      DOCKER_BUILDKIT: 1
    needs: build-tensorflow
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - run: >
          docker build --build-arg BUILDKIT_INLINE_CACHE=1 . --target pybase -f ci_scripts/linux-python-wheels.dockerfile
          -t ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-pybase
          --cache-from=ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-pybase,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-lib-build,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-base-build
      - run: docker push ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-pybase
  build-py36-tf-wheel:
    runs-on: ubuntu-18.04
    env:
      DOCKER_BUILDKIT: 1
    needs: build-pybase
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - run: >
          docker build --build-arg BUILDKIT_INLINE_CACHE=1 . --target py36-artifact -f ci_scripts/linux-python-wheels.dockerfile
          -t ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-py36-artifact
          --cache-from=ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-py36-artifact,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-py36,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-pybase,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-lib-build,ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-tflite-base-build
      - run: docker tag $(docker images --filter "label=py36" --format '{{.ID}}') ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-py36
      - run: docker push ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-py36
      - run: docker push ghcr.io/$GITHUB_ACTOR/cache-linux-py-wheels-py36-artifact
  # build-py37-tf-wheel:
  #   needs: build-tensorflow
  #   steps:
  #     - name: Build TF Python 3.7 wheel
  #       run: .github/scripts/build-python-wheel.sh 3.7
  # build-py38-tf-wheel:
  #   needs: build-tensorflow
  #   steps:
  #     - name: Build TF Python 3.8 wheel
  #       run: .github/scripts/build-python-wheel.sh 3.8
  # build-py39-tf-wheel:
  #   needs: build-tensorflow
  #   steps:
  #     - name: Build TF Python 3.9 wheel
  #       run: .github/scripts/build-python-wheel.sh 3.9
  # # build-tensorflow-tflite:
  # #   steps:
  # #     - name: Build TensorFlow (TFLite)
  # #       run: .github/scripts/build-tensorflow.sh --tflite
