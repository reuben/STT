name: "Log in to Docker registry"
description: "Log in to Docker registry"
inputs:
  dockerfile:
    description: "Path to Dockerfile to build"
    required: false
    default: "Dockerfile"
  target:
    description: "Target to build (image is automatically tagged with base-url + target name)"
    required: true
  base-url:
    description: "Base URL to prepend tag and list of cache targets with"
    required: false
    default: ""
  cache-targets:
    description: "JSON list, list of cache targets to pass to docker build --cache-from. Gets appended to base-url to form final list of URLs."
    required: false
    default: "[]"
  extra-args:
    description: "Extra arguments to docker build"
    required: false
    default: ""
  disable-cache:
    description: "Do not specify --cache-from with cache-targets"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - run: |
        set -xe
        if [[ ${{ inputs.disable-cache }} == "true" ]]; then
          MAYBE_CACHE_FROM=""
        else
          MAYBE_CACHE_FROM="--cache-from=$(eval echo $CACHE_FROM_LINE)"
        fi
        docker build $MAYBE_BUILD_ARG . --target ${{ inputs.target }} -f ${{ inputs.dockerfile }} \
        -t ${{ inputs.base-url }}${{ inputs.target }} \
        $MAYBE_CACHE_FROM \
        ${{ inputs.extra-args }}
      shell: bash
      env:
        MAYBE_BUILD_ARG: ${{ runner.os == 'Linux' && '--build-arg BUILDKIT_INLINE_CACHE=1' || '' }}
        RUNNER_OS: ${{ runner.os }}
        CACHE_FROM_LINE: ${{ inputs.base-url }}${{ join(fromJSON(inputs.cache-targets), format(',{0}', inputs.base-url)) }}
